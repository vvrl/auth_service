openapi: 3.0.3
info:
  title: Authentication Service API
  description: API для сервиса аутентификации, предоставляющее JWT access и refresh токены для пользователей.
  version: 1.0.0
  
components:
  schemas:
    TokenPair:
      type: object
      properties:
        access_token:
          type: string
          description: "JSON Web Token для доступа к защищенным ресурсам."
          example: "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YTdlM2MyYy1jMTJhLTRjMjgtODVhMy0zZTAzMTJhMWE4NGIiLCJleHAiOjE3NTIxMDQ0MDAsImlhdCI6MTc1MjEwMzUwMH0.example_new_token_signature"
        refresh_token:
          type: string
          description: "Токен для обновления пары токенов."
          example: "a7b8c9d0-e1f2-a3b4-c5d6-e7f8a9b0c1d2"

    RefreshTokenRequest:
      type: object
      required:
        - access_token
        - refresh_token
      properties:
        access_token:
          type: string
          description: "Текущий (возможно, просроченный) access токен."
        refresh_token:
          type: string
          description: "Текущий refresh токен."

    Error:
      type: object
      properties:
        error:
          type: string
          description: "Описание произошедшей ошибки."

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Аутентификация с помощью JWT токена. Токен должен быть передан в заголовке `Authorization` в формате `Bearer <token>`.
      
paths:
  /tokens:
    get:
      tags:
        - Authentication
      summary: Получить новую пару токенов
      description: Создает и возвращает новую пару access и refresh токенов для пользователя с указанным GUID.
      parameters:
        - name: user_id
          in: query
          required: true
          description: Уникальный идентификатор пользователя (GUID).
          schema:
            type: string
            format: uuid
            example: "7a7e3c2c-c12a-4c28-85a3-3e0312a1a84b"
      responses:
        '200':
          description: Успешное получение токенов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '400':
          description: Некорректный запрос.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missingId:
                  summary: Отсутствует user_id
                  value:
                    error: "need user id"
                invalidId:
                  summary: Невалидный формат user_id
                  value:
                    error: "invalid user id"
        '500':
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "failed to create tokens"

  /refresh:
    post:
      tags:
        - Authentication
      summary: Обновить пару токенов
      description: Принимает текущую пару токенов и возвращает новую, если валидация прошла успешно.
      requestBody:
        required: true
        description: Текущая пара токенов.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
            examples:
              default:
                summary: Пример запроса на обновление
                value:
                  access_token: "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3YTdlM2MyYy1jMTJhLTRjMjgtODVhMy0zZTAzMTJhMWE4NGIiLCJleHAiOjE3NTE0OTk4ODgsImlhdCI6MTc1MTQ5ODk4OH0.example_expired_token_signature"
                  refresh_token: "1a8f4a5b-c6d7-4e8f-9a0b-1c2d3e4f5a6b"
      responses:
        '200':
          description: Успешное обновление токенов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPair'
        '400':
          description: Некорректное тело запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Invalid request body"
        '401':
          description: Ошибка авторизации.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalidRefreshToken:
                  summary: Невалидный refresh токен
                  value:
                    error: "Invalid refresh token"
                userAgentMismatch:
                  summary: Смена User-Agent
                  value:
                    error: "User-Agent mismatch. All sessions have been revoked."
        '500':
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Failed to create new tokens"

  /me:
    get:
      tags:
        - Authentication
      summary: Получить GUID текущего пользователя
      description: Возвращает GUID пользователя, аутентифицированного с помощью access токена.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешное получение GUID пользователя.
          content:
            application/json:
              schema:
                type: object
                properties:
                  user id:
                    type: string
                    format: uuid
                    example: "7a7e3c2c-c12a-4c28-85a3-3e0312a1a84b"
        '401':
          description: Ошибка авторизации.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                missingHeader:
                  summary: Отсутствует заголовок
                  value:
                    error: "authorization header is missing"
                expiredToken:
                  summary: Просроченный токен
                  value:
                    error: "Token has expired"
        '500':
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "User ID not found in context"

  /logout:
    post:
      tags:
        - Authentication
      summary: Деавторизовать пользователя
      description: Отзывает все активные сессии (refresh токены) для текущего пользователя. Требует валидный access токен.
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Успешная деавторизация (нет тела ответа).
        '401':
          description: Ошибка авторизации.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalidToken:
                  summary: Невалидный токен
                  value:
                    error: "Invalid token"
        '500':
          description: Внутренняя ошибка сервера.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: "Failed to logout"